apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "5"
  creationTimestamp: null
  generation: 1
  labels:
    app: prometheus
  name: prometheus-deployment
  selfLink: /apis/extensions/v1beta1/namespaces/monitoring/deployments/prometheus-deployment
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
      name: prometheus
    spec:
      containers:
      - args:
        - apk add --no-cache curl && while :; do curl -Ss --cacert /bundle/ca.pem
          --cert /bundle/cert.pem --key /bundle/key.pem --output /inventory/inventory.json
          https://ucp-controller.kube-system.svc.cluster.local/metricsdiscovery; sleep
          15; done
        - -storage.local.memory-chunks=1048576
        - -config.file=/etc/prometheus/prometheus.yml
        - -alertmanager.url=http://192.168.1.111:9093
        command:
        - sh
        - -c
        image: alpine
        imagePullPolicy: IfNotPresent
        name: inventory
        ports:
        - containerPort: 9090
          name: web
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /bundle
          name: bundle
        - mountPath: /inventory
          name: inventory
      - args:
        - -storage.local.retention=360h
        - -storage.local.memory-chunks=1048576
        - -config.file=/etc/prometheus/prometheus.yml
        - -alertmanager.url=http://eeucp01.emergingtechnology.co.nz:33220
        image: prom/prometheus:v1.8.2
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: 9090
          name: web
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus
          name: config-volume
        - mountPath: /etc/prometheus-rules
          name: alertrules-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: prometheus
      serviceAccountName: prometheus
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: com.docker.ucp.manager
        operator: Exists
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-configmap
        name: config-volume
      - configMap:
          defaultMode: 420
          name: prometheus-alertrules
        name: alertrules-volume
      - name: bundle
        secret:
          defaultMode: 420
          secretName: prometheus
      - name: inventory
        persistentVolumeClaim:
          claimName: prometheus-pvc01
status: {}
